{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joewlos/Documents/joe_web_react/src/components/Sunburst.js\",\n    _s = $RefreshSig$();\n\n// React\nimport React, { useState } from 'react'; // React Plotly\n\nimport Plot from 'react-plotly.js'; // Resize observer\n\nimport useResizeObserver from 'use-resize-observer'; // Create a sunburst chart with labels\n\nfunction Sunburst(props) {\n  _s();\n\n  const data = props.data; // Get the resizing info\n\n  const {\n    ref,\n    width = 1,\n    height = 1\n  } = useResizeObserver(); // Show a loading message if the data is not available\n\n  const loading = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 21\n  }, this);\n\n  if (!data) {\n    return loading;\n  }\n\n  ; // Return the chart\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        x: [1, 2, 3],\n        y: [2, 6, 3],\n        type: 'scatter',\n        mode: 'lines+markers',\n        marker: {\n          color: 'red'\n        }\n      }, {\n        type: 'bar',\n        x: [1, 2, 3],\n        y: [2, 5, 3]\n      }],\n      layout: {\n        width: 320,\n        height: 240,\n        title: 'A Fancy Plot'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sunburst, \"T0Sxn33gjE7+BfJmWu67U7vYF/A=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = Sunburst;\n;\nexport default Sunburst;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sunburst\");","map":{"version":3,"sources":["/Users/joewlos/Documents/joe_web_react/src/components/Sunburst.js"],"names":["React","useState","Plot","useResizeObserver","Sunburst","props","data","ref","width","height","loading","x","y","type","mode","marker","color","title"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB,CADqB,CAGrB;;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,CAAf;AAAkBC,IAAAA,MAAM,GAAG;AAA3B,MAAiCN,iBAAiB,EAAxD,CAJqB,CAMrB;;AACA,QAAMO,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;;AACA,MAAI,CAACJ,IAAL,EAAW;AACP,WAAQI,OAAR;AACH;;AAAA,GAVoB,CAYrB;;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAZ;AAA8C,IAAA,GAAG,EAAGF,GAApD;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,IAAI,EAAE,CACN;AACII,QAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADP;AAEIC,QAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFP;AAGIC,QAAAA,IAAI,EAAE,SAHV;AAIIC,QAAAA,IAAI,EAAE,eAJV;AAKIC,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AALZ,OADM,EAQN;AAACH,QAAAA,IAAI,EAAE,KAAP;AAAcF,QAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB;AAA4BC,QAAAA,CAAC,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAA/B,OARM,CADV;AAWI,MAAA,MAAM,EAAE;AAACJ,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAE,GAArB;AAA0BQ,QAAAA,KAAK,EAAE;AAAjC;AAXZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA9BQb,Q;UAIkCD,iB;;;KAJlCC,Q;AA8BR;AAED,eAAeA,QAAf","sourcesContent":["// React\nimport React, { useState } from 'react';\n\n// React Plotly\nimport Plot from 'react-plotly.js';\n\n// Resize observer\nimport useResizeObserver from 'use-resize-observer';\n\n// Create a sunburst chart with labels\nfunction Sunburst(props) {\n    const data = props.data;\n\n    // Get the resizing info\n    const { ref, width = 1, height = 1 } = useResizeObserver();\n\n    // Show a loading message if the data is not available\n    const loading = <p>Loading...</p>\n    if (!data) {\n        return (loading);\n    };\n\n    // Return the chart\n    return (\n        <div style={{ width: '100%', height: '100%'}} ref={ ref }>\n            <Plot\n                data={[\n                {\n                    x: [1, 2, 3],\n                    y: [2, 6, 3],\n                    type: 'scatter',\n                    mode: 'lines+markers',\n                    marker: {color: 'red'},\n                },\n                {type: 'bar', x: [1, 2, 3], y: [2, 5, 3]},\n                ]}\n                layout={{width: 320, height: 240, title: 'A Fancy Plot'}}\n            />\n        </div>\n    );\n};\n\nexport default Sunburst;"]},"metadata":{},"sourceType":"module"}