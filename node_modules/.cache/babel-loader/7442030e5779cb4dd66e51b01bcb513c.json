{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joewlos/Documents/joe_web_react/src/components/PredictIt.js\",\n    _s = $RefreshSig$();\n\n// React\nimport React, { useState, useEffect } from 'react'; // Bootstrap\n\nimport { Row, Col, Table } from 'react-bootstrap'; // Graphing\n\nimport LineChart from './LineChart.js'; // FontAwesome\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faEquals } from '@fortawesome/free-solid-svg-icons'; // Import components\n\nimport Navigation from './Navigation.js';\nimport Footer from './Footer.js'; // Import CSS for the page and content\n\nimport './css/Page.css';\nimport './css/PredictIt.css'; // Content for Red Mirage\n\nfunction PredictIt() {\n  _s();\n\n  const [predictItData, setPredictItData] = useState({\n    overall: {\n      invested: false,\n      cash: false,\n      total: false\n    },\n    performance_x: false,\n    performance_y: false,\n    monthly_table: []\n  }); // Fetch the message from the API and update state\n\n  useEffect(() => {\n    fetch('/api/v1/predictit_data').then(res => res.json()).then(data => {\n      setPredictItData(data);\n    });\n  }, []); // No transition for the navigation on pages\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      transition: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-content\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"align-items-center mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 5,\n            className: \"text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"page-title mb-5\",\n              children: \"Event Forecasting on PredictIt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                href: \"https://www.predictit.org/\",\n                children: \"PredictIt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), \" is an online prediction market which allows users to buy \\\"yes\\\" or \\\"no\\\" contracts on the outcome of political events. Before the event occurs, owned contracts can be sold at a profit or a loss. After the event occurs, the prediction market resolves, and each winning contract receives $1.00.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"In February 2019, I created an account and decided to track the performance of \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"my initial $50.00 deposit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 116\n              }, this), \". While my own political opinions often aligned with my bets, I tried to focus on buying undervalued contracts. Therefore, the data displayed here are not necessarily a reflection of my personal opinions.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"When I started working at Hawkfish in February 2020, I stopped actively trading contracts on PredictIt. This page uses my last active \\\"account history export\\\"\\u2013before the 2020 Iowa Caucus\\u2013to display my performance.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 7,\n            className: \"text-center mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-5 mr-5\",\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: 3,\n                  className: \"text-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"overall-title\",\n                    children: [\"Contracts\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 83\n                    }, this), \"Owned\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"overall-number\",\n                    children: [\"$\", predictItData.overall.invested]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 1,\n                  className: \"text-center mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    className: \"overall-symbol\",\n                    icon: faPlus\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 3,\n                  className: \"text-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"overall-title\",\n                    children: [\"Cash\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 78\n                    }, this), \"Available\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"overall-number\",\n                    children: [\"$\", predictItData.overall.cash]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 2,\n                  className: \"text-center mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    className: \"overall-symbol\",\n                    icon: faEquals\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 3,\n                  className: \"text-center mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"overall-title\",\n                    children: [\"Total\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 79\n                    }, this), \"Portfolio\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"overall-number positive\",\n                    children: [\"$\", predictItData.overall.total]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: 12,\n                  className: \"text-center mt-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"page-subtitle\",\n                    children: \"February 2019 to January 2020\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: 12,\n                  className: \"text-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"performance-line\",\n                    children: /*#__PURE__*/_jsxDEV(LineChart, {\n                      x: predictItData.performance_x,\n                      y: predictItData.performance_y\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"align-items-center mb-5 d-none d-md-block\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              bordered: true,\n              className: \"red-mirage-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 45\n                  }, this), predictItData.monthly && predictItData.monthly.length > 0 ? predictItData.monthly.map((object, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: object.Month\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 57\n                    }, this);\n                  }) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"EoM Value\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 45\n                  }, this), predictItData.monthly && predictItData.monthly.length > 0 ? predictItData.monthly.map((object, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\"$\", object.Total.toFixed(2)]\n                    }, i, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 57\n                    }, this);\n                  }) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PredictIt, \"qAV5Pkr9R1N5MfCgKp88Nu7Ocsk=\");\n\n_c = PredictIt;\nexport default PredictIt;\n\nvar _c;\n\n$RefreshReg$(_c, \"PredictIt\");","map":{"version":3,"sources":["/Users/joewlos/Documents/joe_web_react/src/components/PredictIt.js"],"names":["React","useState","useEffect","Row","Col","Table","LineChart","FontAwesomeIcon","faPlus","faEquals","Navigation","Footer","PredictIt","predictItData","setPredictItData","overall","invested","cash","total","performance_x","performance_y","monthly_table","fetch","then","res","json","data","monthly","length","map","object","i","Month","Total","toFixed"],"mappings":"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","sourcesContent":["// React\nimport React, {\n    useState,\n    useEffect\n} from 'react';\n\n// Bootstrap\nimport { \n    Row, \n    Col,\n    Table\n} from 'react-bootstrap';\n\n// Graphing\nimport LineChart from './LineChart.js';\n\n// FontAwesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faPlus,\n  faEquals\n} from '@fortawesome/free-solid-svg-icons';\n\n// Import components\nimport Navigation from './Navigation.js';\nimport Footer from './Footer.js';\n\n// Import CSS for the page and content\nimport './css/Page.css';\nimport './css/PredictIt.css';\n\n// Content for Red Mirage\nfunction PredictIt() {\n    const [predictItData, setPredictItData] = useState({\n        overall: {\n            invested: false, \n            cash: false, \n            total: false\n        },\n        performance_x: false,\n        performance_y: false,\n        monthly_table: []\n    });\n\n    // Fetch the message from the API and update state\n    useEffect(() => {\n        fetch('/api/v1/predictit_data').then(res => res.json()).then(data => {\n            setPredictItData(data);\n        });\n    }, []);\n\n    // No transition for the navigation on pages\n    return (\n        <div>\n            <Navigation transition={ false }/>\n\n                {/* Content */}\n                <div className='container-page'>\n                    <div className='container-content'>\n\n                        {/* Summary text */}\n                        <Row className='align-items-center mb-5'>\n                            <Col md={ 5 } className='text-left'>\n                                <h1 className='page-title mb-5'>\n                                    Event Forecasting on PredictIt\n                                </h1>\n                                <p>\n                                    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.predictit.org/\">PredictIt</a> is an online prediction market\n                                    which allows users to buy \"yes\" or \"no\" contracts on the outcome of political events.\n                                    Before the event occurs, owned contracts can be sold at a profit or a loss.\n                                    After the event occurs, the prediction market resolves, and each winning contract receives $1.00.\n                                </p>\n                                <p>\n                                    In February 2019, I created an account and decided to track the performance of <b>my initial $50.00 deposit</b>. \n                                    While my own political opinions often aligned with my bets, I tried to focus on buying undervalued contracts. \n                                    Therefore, the data displayed here are not necessarily a reflection of my personal opinions.\n                                </p>\n                                <p>\n                                    When I started working at Hawkfish in February 2020, I stopped actively trading contracts on PredictIt.\n                                    This page uses my last active \"account history export\"–before the 2020 Iowa Caucus–to display my performance.\n                                </p>\n                            </Col>\n                            <Col md={ 7 } className='text-center mt-2'>\n                                <div className='ml-5 mr-5'>\n                                    <Row className='align-items-center'>\n                                        <Col md={ 3 } className='text-center mb-3'>\n                                            <p className='overall-title'>Contracts<br />Owned</p>\n                                            <p className='overall-number'>${ predictItData.overall.invested }</p>\n                                        </Col>\n                                        <Col md={ 1 } className='text-center mb-3'>\n                                            <FontAwesomeIcon className='overall-symbol' icon={ faPlus } />\n                                        </Col>\n                                        <Col md={ 3 } className='text-center mb-3'>\n                                            <p className='overall-title'>Cash<br />Available</p>\n                                            <p className='overall-number'>${ predictItData.overall.cash }</p>\n                                        </Col>\n                                        <Col md={ 2 } className='text-center mb-3'>\n                                            <FontAwesomeIcon className='overall-symbol' icon={ faEquals } />\n                                        </Col>\n                                        <Col md={ 3 } className='text-center mb-3'>\n                                            <p className='overall-title'>Total<br />Portfolio</p>\n                                            <p className='overall-number positive'>${ predictItData.overall.total }</p>\n                                        </Col>\n                                    </Row>\n                                    <Row className='align-items-center'>\n                                        <Col md={ 12 } className='text-center mt-3'>\n                                            <p className='page-subtitle'>\n                                                February 2019 to January 2020\n                                            </p>\n                                        </Col>\n                                    </Row>\n                                    <Row className='align-items-center'>\n                                        <Col md={ 12 } className='text-center'>\n                                            <div className='performance-line'>\n                                                <LineChart\n                                                    x={ predictItData.performance_x }\n                                                    y={ predictItData.performance_y }\n                                                />\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </Col>\n                        </Row>\n\n                        {/* Monthly returns */}\n                        <Row className='align-items-center mb-5 d-none d-md-block'>\n                            <Col md={ 12 } className='text-center'>\n                                <Table bordered className='red-mirage-table'>\n                                    <thead>\n                                        <tr>\n                                            <th></th>\n                                            { predictItData.monthly && predictItData.monthly.length > 0 ?\n                                                predictItData.monthly.map((object, i) => {\n                                                    return (\n                                                        <th key={ i }>{ object.Month }</th>\n                                                    );\n                                                })\n                                                : null\n                                            }\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td><b>EoM Value</b></td>\n                                            { predictItData.monthly && predictItData.monthly.length > 0 ?\n                                                predictItData.monthly.map((object, i) => {\n                                                    return (\n                                                        <td key={ i }>${ object.Total.toFixed(2) }</td>\n                                                    );\n                                                })\n                                                : null\n                                            }\n                                        </tr>\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n\n            {/* Close out the page with the footer */}\n            <Footer />\n        </div>\n    );\n}\n\nexport default PredictIt;"]},"metadata":{},"sourceType":"module"}