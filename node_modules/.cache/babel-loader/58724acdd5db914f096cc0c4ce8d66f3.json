{"ast":null,"code":"import _slicedToArray from\"/Users/joewlos/Documents/joe_web_react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// React\nimport React,{useState,useEffect}from'react';// Bootstrap\nimport{Row,Col,Table}from'react-bootstrap';// Graphing\nimport LineChart from'./LineChart.js';// FontAwesome\nimport{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPlus,faEquals}from'@fortawesome/free-solid-svg-icons';// Import components\nimport Navigation from'./Navigation.js';import Footer from'./Footer.js';// Import CSS for the page and content\nimport'./css/Page.css';import'./css/PredictIt.css';// Content for PredictIt\nfunction PredictIt(){var _useState=useState({overall:{invested:false,cash:false,total:false},performance_x:false,performance_y:false,monthly_table:[],best:[],worst:[]}),_useState2=_slicedToArray(_useState,2),predictItData=_useState2[0],setPredictItData=_useState2[1];// Fetch the message from the API and update state\nuseEffect(function(){fetch('/api/v1/predictit_data').then(function(res){return res.json();}).then(function(data){setPredictItData(data);});document.title=\"Joe Wlos - PredictIt\";},[]);// No transition for the navigation on pages\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navigation,{transition:false}),/*#__PURE__*/_jsx(\"div\",{className:\"container-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-content\",children:[/*#__PURE__*/_jsxs(Row,{className:\"align-items-center mb-4\",children:[/*#__PURE__*/_jsxs(Col,{md:5,className:\"text-left\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title mb-5\",children:\"Event Forecasting on PredictIt\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",rel:\"noreferrer\",href:\"https://www.predictit.org/\",children:\"PredictIt\"}),\" is an online prediction market which allows users to buy \\\"yes\\\" or \\\"no\\\" contracts on the outcome of political events. Before the event occurs, owned contracts can be sold at a profit or a loss. After the event occurs, the prediction market resolves, and each winning contract receives $1.00.\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"In February 2019, I created an account and decided to track the performance of \",/*#__PURE__*/_jsx(\"b\",{children:\"my initial $50.00 deposit\"}),\". While my own political opinions often aligned with my bets, I tried to focus on buying undervalued contracts. Therefore, the data displayed here are not necessarily a reflection of my personal opinions.\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"When I started working at Hawkfish in February 2020, I stopped actively trading contracts on PredictIt. This page uses my last active \\\"account history export\\\"\\u2013before the 2020 Iowa Caucus\\u2013to display my performance.\"})]}),/*#__PURE__*/_jsx(Col,{md:7,className:\"text-center mt-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ml-5 mr-5\",children:[/*#__PURE__*/_jsxs(Row,{className:\"align-items-center\",children:[/*#__PURE__*/_jsxs(Col,{md:3,className:\"text-center mb-3\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"overall-title\",children:[\"Contracts\",/*#__PURE__*/_jsx(\"br\",{}),\"Owned\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"overall-number\",children:[\"$\",predictItData.overall.invested]})]}),/*#__PURE__*/_jsx(Col,{md:1,className:\"text-center mb-3\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"overall-symbol\",icon:faPlus})}),/*#__PURE__*/_jsxs(Col,{md:3,className:\"text-center mb-3\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"overall-title\",children:[\"Cash\",/*#__PURE__*/_jsx(\"br\",{}),\"Available\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"overall-number\",children:[\"$\",predictItData.overall.cash]})]}),/*#__PURE__*/_jsx(Col,{md:2,className:\"text-center mb-3\",children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"overall-symbol\",icon:faEquals})}),/*#__PURE__*/_jsxs(Col,{md:3,className:\"text-center mb-3\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"overall-title\",children:[\"Total\",/*#__PURE__*/_jsx(\"br\",{}),\"Portfolio\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"overall-number positive\",children:[\"$\",predictItData.overall.total]})]})]}),/*#__PURE__*/_jsx(Row,{className:\"align-items-center\",children:/*#__PURE__*/_jsx(Col,{md:12,className:\"text-center mt-3\",children:/*#__PURE__*/_jsx(\"p\",{className:\"page-subtitle\",children:\"February 2019 to January 2020\"})})}),/*#__PURE__*/_jsx(Row,{className:\"align-items-center\",children:/*#__PURE__*/_jsx(Col,{md:12,className:\"text-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"performance-line\",children:/*#__PURE__*/_jsx(LineChart,{x:predictItData.performance_x,y:predictItData.performance_y})})})})]})})]}),/*#__PURE__*/_jsx(Row,{className:\"align-items-center d-none d-md-block\",children:/*#__PURE__*/_jsx(Col,{md:12,className:\"text-center mb-1\",children:/*#__PURE__*/_jsx(\"p\",{className:\"page-subtitle\",children:\"Monthly Performance\"})})}),/*#__PURE__*/_jsx(Row,{className:\"align-items-center mb-5 d-none d-md-block\",children:/*#__PURE__*/_jsx(Col,{md:12,className:\"text-center\",children:/*#__PURE__*/_jsxs(Table,{bordered:true,className:\"predictit-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{}),predictItData.monthly&&predictItData.monthly.length>0?predictItData.monthly.map(function(object,i){return/*#__PURE__*/_jsx(\"th\",{children:object.Month},i);}):null]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"text-left predictit-column\",children:/*#__PURE__*/_jsx(\"b\",{children:\"EoM Value\"})}),predictItData.monthly&&predictItData.monthly.length>0?predictItData.monthly.map(function(object,i){return/*#__PURE__*/_jsxs(\"td\",{className:\"value\",children:[\"$\",object.Total.toFixed(2)]},i);}):null]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"text-left predictit-column\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Monthly Return\"})}),predictItData.monthly&&predictItData.monthly.length>0?predictItData.monthly.map(function(object,i){return/*#__PURE__*/_jsxs(\"td\",{className:object.MonthReturn<0?'loss':'profit',children:[(object.MonthReturn*100).toFixed(1),\"%\"]},i);}):null]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"text-left predictit-column\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Total Return\"})}),predictItData.monthly&&predictItData.monthly.length>0?predictItData.monthly.map(function(object,i){return/*#__PURE__*/_jsxs(\"td\",{className:object.InceptReturn<0?'loss':'profit',children:[(object.InceptReturn*100).toFixed(1),\"%\"]},i);}):null]})]})]})})}),/*#__PURE__*/_jsxs(Row,{className:\"align-items-center\",children:[/*#__PURE__*/_jsxs(Col,{md:6,className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"page-subtitle mb-4\",children:\"Best Trades!\"}),predictItData.best&&predictItData.best.length>0?predictItData.best.map(function(object,i){return/*#__PURE__*/_jsxs(Row,{className:\"align-items-center predictit-market mb-3 mt-3 ml-1 mr-1\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(\"p\",{className:\"best-amt mb-0\",children:[\"+ $\",object.CreditDebit.toFixed(2)]})}),/*#__PURE__*/_jsx(Col,{md:9,children:/*#__PURE__*/_jsxs(Row,{className:\"align-items-center text-center\",children:[/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(\"a\",{rel:\"noreferrer\",target:\"_blank\",href:\"https://www.predictit.org/markets/detail/\"+object.MarketID,children:/*#__PURE__*/_jsx(\"p\",{className:\"market-link\",children:object.MarketName})})}),/*#__PURE__*/_jsxs(Col,{md:6,className:\"extra-info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Final Trade\"}),/*#__PURE__*/_jsx(\"p\",{children:object.DateExecuted.substring(0,10)})]}),/*#__PURE__*/_jsxs(Col,{md:6,className:\"extra-info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Contracts Traded\"}),/*#__PURE__*/_jsx(\"p\",{children:object.Shares})]})]})})]},i);}):null]}),/*#__PURE__*/_jsxs(Col,{md:6,className:\"text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"page-subtitle mb-4\",children:\"Worst Trades...\"}),predictItData.worst&&predictItData.worst.length>0?predictItData.worst.map(function(object,i){return/*#__PURE__*/_jsxs(Row,{className:\"align-items-center predictit-market mb-3 mt-3 ml-1 mr-1\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsxs(\"p\",{className:\"worst-amt mb-0\",children:[\"- $\",(0-object.CreditDebit).toFixed(2)]})}),/*#__PURE__*/_jsx(Col,{md:9,children:/*#__PURE__*/_jsxs(Row,{className:\"align-items-center text-center\",children:[/*#__PURE__*/_jsx(Col,{md:12,children:/*#__PURE__*/_jsx(\"a\",{rel:\"noreferrer\",target:\"_blank\",href:\"https://www.predictit.org/markets/detail/\"+object.MarketID,children:/*#__PURE__*/_jsx(\"p\",{className:\"market-link\",children:object.MarketName})})}),/*#__PURE__*/_jsxs(Col,{md:6,className:\"extra-info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Final Trade\"}),/*#__PURE__*/_jsx(\"p\",{children:object.DateExecuted.substring(0,10)})]}),/*#__PURE__*/_jsxs(Col,{md:6,className:\"extra-info\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"Contracts Traded\"}),/*#__PURE__*/_jsx(\"p\",{children:object.Shares})]})]})})]},i);}):null]})]})]})}),/*#__PURE__*/_jsx(Footer,{})]});}export default PredictIt;","map":{"version":3,"sources":["/Users/joewlos/Documents/joe_web_react/src/components/PredictIt.js"],"names":["React","useState","useEffect","Row","Col","Table","LineChart","FontAwesomeIcon","faPlus","faEquals","Navigation","Footer","PredictIt","overall","invested","cash","total","performance_x","performance_y","monthly_table","best","worst","predictItData","setPredictItData","fetch","then","res","json","data","document","title","monthly","length","map","object","i","Month","Total","toFixed","MonthReturn","InceptReturn","CreditDebit","MarketID","MarketName","DateExecuted","substring","Shares"],"mappings":"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","sourcesContent":["// React\nimport React, {\n    useState,\n    useEffect\n} from 'react';\n\n// Bootstrap\nimport { \n    Row, \n    Col,\n    Table\n} from 'react-bootstrap';\n\n// Graphing\nimport LineChart from './LineChart.js';\n\n// FontAwesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faPlus,\n  faEquals\n} from '@fortawesome/free-solid-svg-icons';\n\n// Import components\nimport Navigation from './Navigation.js';\nimport Footer from './Footer.js';\n\n// Import CSS for the page and content\nimport './css/Page.css';\nimport './css/PredictIt.css';\n\n// Content for PredictIt\nfunction PredictIt() {\n    const [predictItData, setPredictItData] = useState({\n        overall: {\n            invested: false, \n            cash: false, \n            total: false\n        },\n        performance_x: false,\n        performance_y: false,\n        monthly_table: [],\n        best: [],\n        worst: []\n    });\n\n    // Fetch the message from the API and update state\n    useEffect(() => {\n        fetch('/api/v1/predictit_data').then(res => res.json()).then(data => {\n            setPredictItData(data);\n        });\n        document.title = \"Joe Wlos - PredictIt\";\n    }, []);\n\n    // No transition for the navigation on pages\n    return (\n        <div>\n            <Navigation transition={ false }/>\n\n                {/* Content */}\n                <div className='container-page'>\n                    <div className='container-content'>\n\n                        {/* Summary text */}\n                        <Row className='align-items-center mb-4'>\n                            <Col md={ 5 } className='text-left'>\n                                <h1 className='page-title mb-5'>\n                                    Event Forecasting on PredictIt\n                                </h1>\n                                <p>\n                                    <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.predictit.org/\">PredictIt</a> is an online prediction market\n                                    which allows users to buy \"yes\" or \"no\" contracts on the outcome of political events.\n                                    Before the event occurs, owned contracts can be sold at a profit or a loss.\n                                    After the event occurs, the prediction market resolves, and each winning contract receives $1.00.\n                                </p>\n                                <p>\n                                    In February 2019, I created an account and decided to track the performance of <b>my initial $50.00 deposit</b>. \n                                    While my own political opinions often aligned with my bets, I tried to focus on buying undervalued contracts. \n                                    Therefore, the data displayed here are not necessarily a reflection of my personal opinions.\n                                </p>\n                                <p>\n                                    When I started working at Hawkfish in February 2020, I stopped actively trading contracts on PredictIt.\n                                    This page uses my last active \"account history export\"–before the 2020 Iowa Caucus–to display my performance.\n                                </p>\n                            </Col>\n                            <Col md={ 7 } className='text-center mt-2'>\n                                <div className='ml-5 mr-5'>\n                                    <Row className='align-items-center'>\n                                        <Col md={ 3 } className='text-center mb-3'>\n                                            <p className='overall-title'>Contracts<br />Owned</p>\n                                            <p className='overall-number'>${ predictItData.overall.invested }</p>\n                                        </Col>\n                                        <Col md={ 1 } className='text-center mb-3'>\n                                            <FontAwesomeIcon className='overall-symbol' icon={ faPlus } />\n                                        </Col>\n                                        <Col md={ 3 } className='text-center mb-3'>\n                                            <p className='overall-title'>Cash<br />Available</p>\n                                            <p className='overall-number'>${ predictItData.overall.cash }</p>\n                                        </Col>\n                                        <Col md={ 2 } className='text-center mb-3'>\n                                            <FontAwesomeIcon className='overall-symbol' icon={ faEquals } />\n                                        </Col>\n                                        <Col md={ 3 } className='text-center mb-3'>\n                                            <p className='overall-title'>Total<br />Portfolio</p>\n                                            <p className='overall-number positive'>${ predictItData.overall.total }</p>\n                                        </Col>\n                                    </Row>\n                                    <Row className='align-items-center'>\n                                        <Col md={ 12 } className='text-center mt-3'>\n                                            <p className='page-subtitle'>\n                                                February 2019 to January 2020\n                                            </p>\n                                        </Col>\n                                    </Row>\n                                    <Row className='align-items-center'>\n                                        <Col md={ 12 } className='text-center'>\n                                            <div className='performance-line'>\n                                                <LineChart\n                                                    x={ predictItData.performance_x }\n                                                    y={ predictItData.performance_y }\n                                                />\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            </Col>\n                        </Row>\n\n                        {/* Monthly returns */}\n                        <Row className='align-items-center d-none d-md-block'>\n                            <Col md={ 12 } className='text-center mb-1'>\n                                <p className='page-subtitle'>\n                                    Monthly Performance\n                                </p>\n                            </Col>\n                        </Row>\n                        <Row className='align-items-center mb-5 d-none d-md-block'>\n                            <Col md={ 12 } className='text-center'>\n                                <Table bordered className='predictit-table'>\n                                    <thead>\n                                        <tr>\n                                            <th></th>\n                                            { predictItData.monthly && predictItData.monthly.length > 0 ?\n                                                predictItData.monthly.map((object, i) => {\n                                                    return (\n                                                        <th key={ i }>{ object.Month }</th>\n                                                    );\n                                                })\n                                                : null\n                                            }\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <td className='text-left predictit-column'><b>EoM Value</b></td>\n                                            { predictItData.monthly && predictItData.monthly.length > 0 ?\n                                                predictItData.monthly.map((object, i) => {\n                                                    return (\n                                                        <td key={ i } className='value'>${ object.Total.toFixed(2) }</td>\n                                                    );\n                                                })\n                                                : null\n                                            }\n                                        </tr>\n                                        <tr>\n                                            <td className='text-left predictit-column'><b>Monthly Return</b></td>\n                                            { predictItData.monthly && predictItData.monthly.length > 0 ?\n                                                predictItData.monthly.map((object, i) => {\n                                                    return (\n                                                        <td \n                                                            key={ i }\n                                                            className={ object.MonthReturn < 0 ? 'loss' : 'profit' }\n                                                        >\n                                                            { (object.MonthReturn * 100).toFixed(1) }%\n                                                        </td>\n                                                    );\n                                                })\n                                                : null\n                                            }\n                                        </tr>\n                                        <tr>\n                                            <td className='text-left predictit-column'><b>Total Return</b></td>\n                                            { predictItData.monthly && predictItData.monthly.length > 0 ?\n                                                predictItData.monthly.map((object, i) => {\n                                                    return (\n                                                        <td \n                                                            key={ i }\n                                                            className={ object.InceptReturn < 0 ? 'loss' : 'profit' }\n                                                        >\n                                                            { (object.InceptReturn * 100).toFixed(1) }%\n                                                        </td>\n                                                    );\n                                                })\n                                                : null\n                                            }\n                                        </tr>\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n\n                        {/* Best and worst trades */}\n                        <Row className='align-items-center'>\n                            <Col md={ 6 } className='text-center'>\n                                <p className='page-subtitle mb-4'>\n                                    Best Trades!\n                                </p>\n                                { predictItData.best && predictItData.best.length > 0 ?\n                                    predictItData.best.map((object, i) => {\n                                        return (\n                                            <Row \n                                                key={ i }\n                                                className='align-items-center predictit-market mb-3 mt-3 ml-1 mr-1'\n                                            >\n                                                <Col md={ 3 }>\n                                                    <p className='best-amt mb-0'>+ ${ object.CreditDebit.toFixed(2) }</p>\n                                                </Col>\n                                                <Col md={ 9 }>\n                                                    <Row className='align-items-center text-center'>\n                                                        <Col md={ 12 }>\n                                                            <a rel=\"noreferrer\" target=\"_blank\" href={ \"https://www.predictit.org/markets/detail/\" + object.MarketID }>\n                                                                <p className='market-link'>{ object.MarketName }</p>\n                                                            </a>\n                                                        </Col>\n                                                        <Col md={ 6 } className='extra-info'>\n                                                            <p className='mb-0'>Final Trade</p>\n                                                            <p>{ object.DateExecuted.substring(0, 10) }</p>\n                                                        </Col>\n                                                        <Col md={ 6 } className='extra-info'>\n                                                            <p className='mb-0'>Contracts Traded</p>\n                                                            <p>{ object.Shares }</p>\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                        );\n                                    })\n                                    : null\n                                }\n                            </Col>\n                            <Col md={ 6 } className='text-center'>\n                                <p className='page-subtitle mb-4'>\n                                    Worst Trades...\n                                </p>\n                                { predictItData.worst && predictItData.worst.length > 0 ?\n                                    predictItData.worst.map((object, i) => {\n                                        return (\n                                            <Row \n                                                key={ i }\n                                                className='align-items-center predictit-market mb-3 mt-3 ml-1 mr-1'\n                                            >\n                                                <Col md={ 3 }>\n                                                    <p className='worst-amt mb-0'>- ${ (0 - object.CreditDebit).toFixed(2) }</p>\n                                                </Col>\n                                                <Col md={ 9 }>\n                                                    <Row className='align-items-center text-center'>\n                                                        <Col md={ 12 }>\n                                                            <a rel=\"noreferrer\" target=\"_blank\" href={ \"https://www.predictit.org/markets/detail/\" + object.MarketID }>\n                                                                <p className='market-link'>{ object.MarketName }</p>\n                                                            </a>\n                                                        </Col>\n                                                        <Col md={ 6 } className='extra-info'>\n                                                            <p className='mb-0'>Final Trade</p>\n                                                            <p>{ object.DateExecuted.substring(0, 10) }</p>\n                                                        </Col>\n                                                        <Col md={ 6 } className='extra-info'>\n                                                            <p className='mb-0'>Contracts Traded</p>\n                                                            <p>{ object.Shares }</p>\n                                                        </Col>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                        );\n                                    })\n                                    : null\n                                }\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n\n            {/* Close out the page with the footer */}\n            <Footer />\n        </div>\n    );\n}\n\nexport default PredictIt;"]},"metadata":{},"sourceType":"module"}