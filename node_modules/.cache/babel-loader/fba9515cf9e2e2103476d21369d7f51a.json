{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";// React\nimport React from'react';// React Plotly\nimport Plot from'react-plotly.js';// Resize observer\nimport useResizeObserver from'use-resize-observer';// Create a sunburst chart with labels\nfunction Sunburst(props){var data=props.data;// Get the resizing info\nvar _useResizeObserver=useResizeObserver(),ref=_useResizeObserver.ref,_useResizeObserver$wi=_useResizeObserver.width,width=_useResizeObserver$wi===void 0?1:_useResizeObserver$wi,_useResizeObserver$he=_useResizeObserver.height,height=_useResizeObserver$he===void 0?1:_useResizeObserver$he;// Show a loading message if the data is not available\nvar loading=/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});if(!data){return loading;};// Get the labels, parents, values, and colors from the data\nvar labels=data.labels;var parents=data.parents;var values=data.values;var colors=data.colors;// Return the chart\nreturn/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'100%'},ref:ref,children:/*#__PURE__*/_jsx(Plot,{data:[{type:'sunburst',labels:labels,parents:parents,values:values,leaf:{opacity:1},marker:{colors:colors,line:{width:2,color:'#FAF9F9'}},branchvalues:'total',hovertemplate:'<extra></extra><b>%{label}</b><br>%{value:.0%}',textfont:{family:'Raleway'},hoverlabel:{font:{family:'Raleway'}}}],config:{displayModeBar:false},layout:{width:width,height:height,margin:{l:0,r:0,b:0,t:0},paper_bgcolor:'rgba(0, 0, 0, 0)'}})});};export default Sunburst;","map":{"version":3,"sources":["/Users/joewlos/Documents/joe_web_react/src/components/Sunburst.js"],"names":["React","Plot","useResizeObserver","Sunburst","props","data","ref","width","height","loading","labels","parents","values","colors","type","leaf","opacity","marker","line","color","branchvalues","hovertemplate","textfont","family","hoverlabel","font","displayModeBar","margin","l","r","b","t","paper_bgcolor"],"mappings":"2CAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CAEA;AACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA;AACA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACrB,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAnB,CAEA;AAHqB,uBAIkBH,iBAAiB,EAJnC,CAIbI,GAJa,oBAIbA,GAJa,0CAIRC,KAJQ,CAIRA,KAJQ,gCAIA,CAJA,gEAIGC,MAJH,CAIGA,MAJH,gCAIY,CAJZ,uBAMrB;AACA,GAAMC,CAAAA,OAAO,cAAG,iCAAhB,CACA,GAAI,CAACJ,IAAL,CAAW,CACP,MAAQI,CAAAA,OAAR,CACH,EAED;AACA,GAAMC,CAAAA,MAAM,CAAGL,IAAI,CAACK,MAApB,CACA,GAAMC,CAAAA,OAAO,CAAGN,IAAI,CAACM,OAArB,CACA,GAAMC,CAAAA,MAAM,CAAGP,IAAI,CAACO,MAApB,CACA,GAAMC,CAAAA,MAAM,CAAGR,IAAI,CAACQ,MAApB,CAEA;AACA,mBACI,YAAK,KAAK,CAAG,CAAEN,KAAK,CAAE,MAAT,CAAiBC,MAAM,CAAE,MAAzB,CAAb,CAAgD,GAAG,CAAGF,GAAtD,uBACI,KAAC,IAAD,EACI,IAAI,CAAG,CAAC,CACJQ,IAAI,CAAE,UADF,CAEJJ,MAAM,CAAEA,MAFJ,CAGJC,OAAO,CAAEA,OAHL,CAIJC,MAAM,CAAEA,MAJJ,CAKJG,IAAI,CAAE,CAACC,OAAO,CAAE,CAAV,CALF,CAMJC,MAAM,CAAE,CACJJ,MAAM,CAAEA,MADJ,CAEJK,IAAI,CAAE,CACFX,KAAK,CAAE,CADL,CAEFY,KAAK,CAAE,SAFL,CAFF,CANJ,CAaJC,YAAY,CAAE,OAbV,CAcJC,aAAa,CAAE,gDAdX,CAeJC,QAAQ,CAAE,CAACC,MAAM,CAAE,SAAT,CAfN,CAgBJC,UAAU,CAAE,CAACC,IAAI,CAAE,CAACF,MAAM,CAAE,SAAT,CAAP,CAhBR,CAAD,CADX,CAmBI,MAAM,CAAG,CAACG,cAAc,CAAE,KAAjB,CAnBb,CAoBI,MAAM,CAAG,CACLnB,KAAK,CAAEA,KADF,CAELC,MAAM,CAAEA,MAFH,CAGLmB,MAAM,CAAE,CAAEC,CAAC,CAAE,CAAL,CAAQC,CAAC,CAAE,CAAX,CAAcC,CAAC,CAAE,CAAjB,CAAoBC,CAAC,CAAE,CAAvB,CAHH,CAILC,aAAa,CAAE,kBAJV,CApBb,EADJ,EADJ,CA+BH,EAED,cAAe7B,CAAAA,QAAf","sourcesContent":["// React\nimport React from 'react';\n\n// React Plotly\nimport Plot from 'react-plotly.js';\n\n// Resize observer\nimport useResizeObserver from 'use-resize-observer';\n\n// Create a sunburst chart with labels\nfunction Sunburst(props) {\n    const data = props.data;\n\n    // Get the resizing info\n    const { ref, width = 1, height = 1 } = useResizeObserver();\n\n    // Show a loading message if the data is not available\n    const loading = <p>Loading...</p>\n    if (!data) {\n        return (loading);\n    };\n\n    // Get the labels, parents, values, and colors from the data\n    const labels = data.labels;\n    const parents = data.parents;\n    const values = data.values;\n    const colors = data.colors;\n\n    // Return the chart\n    return (\n        <div style={ { width: '100%', height: '100%'} } ref={ ref }>\n            <Plot\n                data={ [{\n                    type: 'sunburst',\n                    labels: labels,\n                    parents: parents,\n                    values: values,\n                    leaf: {opacity: 1},\n                    marker: {\n                        colors: colors,\n                        line: {\n                            width: 2,\n                            color: '#FAF9F9'\n                        }\n                    },\n                    branchvalues: 'total',\n                    hovertemplate: '<extra></extra><b>%{label}</b><br>%{value:.0%}',\n                    textfont: {family: 'Raleway'},\n                    hoverlabel: {font: {family: 'Raleway'}}\n                }] }\n                config={ {displayModeBar: false} }\n                layout={ {\n                    width: width, \n                    height: height, \n                    margin: { l: 0, r: 0, b: 0, t: 0},\n                    paper_bgcolor: 'rgba(0, 0, 0, 0)'\n                } }\n            />\n        </div>\n    );\n};\n\nexport default Sunburst;"]},"metadata":{},"sourceType":"module"}