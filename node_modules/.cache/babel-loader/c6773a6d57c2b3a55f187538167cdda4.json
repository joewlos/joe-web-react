{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";// React\nimport React from'react';// React Plotly\nimport Plot from'react-plotly.js';// Resize observer\nimport useResizeObserver from'use-resize-observer';// Create a sunburst chart with labels\nfunction LineChart(props){var x=props.x;var y=props.y;// Get the resizing info\nvar _useResizeObserver=useResizeObserver(),ref=_useResizeObserver.ref,_useResizeObserver$wi=_useResizeObserver.width,width=_useResizeObserver$wi===void 0?1:_useResizeObserver$wi,_useResizeObserver$he=_useResizeObserver.height,height=_useResizeObserver$he===void 0?1:_useResizeObserver$he;// Show a loading message if the data is not available\nvar loading=/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});if(!x){return loading;};// Return the chart\nreturn/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'100%'},ref:ref,children:/*#__PURE__*/_jsx(Plot,{data:[{x:x,y:y,type:'line',line:{color:'#555B6E',width:3},hoverinfo:'y'},{x:x,y:Array.from({length:x.length},function(v,i){return 50;}),type:'line',line:{dash:'dot',color:'#8F94A3'},hoverinfo:'skip'}],config:{displayModeBar:false},layout:{width:width,height:height,margin:{l:50,r:25,b:35,t:20,pad:15},paper_bgcolor:'rgba(0, 0, 0, 0)',plot_bgcolor:'rgba(0, 0, 0, 0)',font:{family:'Raleway, sans-serif'},showlegend:false,xaxis:{tickfont:{size:16}},yaxis:{tickfont:{size:16},tickformat:'$',range:[20,80],autorange:false}}})});};export default LineChart;","map":{"version":3,"sources":["/Users/joewlos/Documents/joe_web_react/src/components/LineChart.js"],"names":["React","Plot","useResizeObserver","LineChart","props","x","y","ref","width","height","loading","type","line","color","hoverinfo","Array","from","length","v","i","dash","displayModeBar","margin","l","r","b","t","pad","paper_bgcolor","plot_bgcolor","font","family","showlegend","xaxis","tickfont","size","yaxis","tickformat","range","autorange"],"mappings":"2CAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CAEA;AACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA;AACA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACtB,GAAMC,CAAAA,CAAC,CAAGD,KAAK,CAACC,CAAhB,CACA,GAAMC,CAAAA,CAAC,CAAGF,KAAK,CAACE,CAAhB,CAEA;AAJsB,uBAKiBJ,iBAAiB,EALlC,CAKdK,GALc,oBAKdA,GALc,0CAKTC,KALS,CAKTA,KALS,gCAKD,CALC,gEAKEC,MALF,CAKEA,MALF,gCAKW,CALX,uBAOtB;AACA,GAAMC,CAAAA,OAAO,cAAG,iCAAhB,CACA,GAAI,CAACL,CAAL,CAAQ,CACJ,MAAQK,CAAAA,OAAR,CACH,EAED;AACA,mBACI,YAAK,KAAK,CAAG,CAAEF,KAAK,CAAE,MAAT,CAAiBC,MAAM,CAAE,MAAzB,CAAb,CAAgD,GAAG,CAAGF,GAAtD,uBACI,KAAC,IAAD,EACI,IAAI,CAAG,CACH,CACIF,CAAC,CAAEA,CADP,CAEIC,CAAC,CAAEA,CAFP,CAGIK,IAAI,CAAE,MAHV,CAIIC,IAAI,CAAE,CACFC,KAAK,CAAE,SADL,CAEFL,KAAK,CAAE,CAFL,CAJV,CAQIM,SAAS,CAAE,GARf,CADG,CAWH,CACIT,CAAC,CAAEA,CADP,CAEIC,CAAC,CAAES,KAAK,CAACC,IAAN,CAAW,CAACC,MAAM,CAAEZ,CAAC,CAACY,MAAX,CAAX,CAA+B,SAACC,CAAD,CAAIC,CAAJ,QAAU,GAAV,EAA/B,CAFP,CAGIR,IAAI,CAAE,MAHV,CAIIC,IAAI,CAAE,CACFQ,IAAI,CAAE,KADJ,CAEFP,KAAK,CAAE,SAFL,CAJV,CAQIC,SAAS,CAAE,MARf,CAXG,CADX,CAuBI,MAAM,CAAG,CAACO,cAAc,CAAE,KAAjB,CAvBb,CAwBI,MAAM,CAAG,CACLb,KAAK,CAAEA,KADF,CAELC,MAAM,CAAEA,MAFH,CAGLa,MAAM,CAAE,CAAEC,CAAC,CAAE,EAAL,CAASC,CAAC,CAAE,EAAZ,CAAgBC,CAAC,CAAE,EAAnB,CAAuBC,CAAC,CAAE,EAA1B,CAA8BC,GAAG,CAAE,EAAnC,CAHH,CAILC,aAAa,CAAE,kBAJV,CAKLC,YAAY,CAAE,kBALT,CAMLC,IAAI,CAAE,CAAEC,MAAM,CAAE,qBAAV,CAND,CAOLC,UAAU,CAAE,KAPP,CAQLC,KAAK,CAAE,CAAEC,QAAQ,CAAE,CAAEC,IAAI,CAAE,EAAR,CAAZ,CARF,CASLC,KAAK,CAAE,CAAEF,QAAQ,CAAE,CAAEC,IAAI,CAAE,EAAR,CAAZ,CAA0BE,UAAU,CAAE,GAAtC,CAA2CC,KAAK,CAAE,CAAC,EAAD,CAAK,EAAL,CAAlD,CAA4DC,SAAS,CAAE,KAAvE,CATF,CAxBb,EADJ,EADJ,CAwCH,EAED,cAAepC,CAAAA,SAAf","sourcesContent":["// React\nimport React from 'react';\n\n// React Plotly\nimport Plot from 'react-plotly.js';\n\n// Resize observer\nimport useResizeObserver from 'use-resize-observer';\n\n// Create a sunburst chart with labels\nfunction LineChart(props) {\n    const x = props.x;\n    const y = props.y;\n\n    // Get the resizing info\n    const { ref, width = 1, height = 1 } = useResizeObserver();\n\n    // Show a loading message if the data is not available\n    const loading = <p>Loading...</p>\n    if (!x) {\n        return (loading);\n    };\n\n    // Return the chart\n    return (\n        <div style={ { width: '100%', height: '100%'} } ref={ ref }>\n            <Plot\n                data={ [\n                    {\n                        x: x,\n                        y: y,\n                        type: 'line',\n                        line: {\n                            color: '#555B6E',\n                            width: 3\n                        },\n                        hoverinfo: 'y'\n                    },\n                    {\n                        x: x,\n                        y: Array.from({length: x.length}, (v, i) => 50),\n                        type: 'line',\n                        line: {\n                            dash: 'dot',\n                            color: '#8F94A3'\n                        },\n                        hoverinfo: 'skip'\n                    }\n                ] }\n                config={ {displayModeBar: false} }\n                layout={ {\n                    width: width, \n                    height: height, \n                    margin: { l: 50, r: 25, b: 35, t: 20, pad: 15 },\n                    paper_bgcolor: 'rgba(0, 0, 0, 0)',\n                    plot_bgcolor: 'rgba(0, 0, 0, 0)',\n                    font: { family: 'Raleway, sans-serif' },\n                    showlegend: false,\n                    xaxis: { tickfont: { size: 16 } },\n                    yaxis: { tickfont: { size: 16 }, tickformat: '$', range: [20, 80], autorange: false}\n                } }\n            />\n        </div>\n    );\n};\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}