{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";// React\nimport React from'react';// React Plotly\nimport Plot from'react-plotly.js';// Resize observer\nimport useResizeObserver from'use-resize-observer';// Create a sunburst chart with labels\nfunction StackedBar(props){var data=props.data;var useX=props.x;// Get the resizing info\nvar _useResizeObserver=useResizeObserver(),ref=_useResizeObserver.ref,_useResizeObserver$wi=_useResizeObserver.width,width=_useResizeObserver$wi===void 0?1:_useResizeObserver$wi,_useResizeObserver$he=_useResizeObserver.height,height=_useResizeObserver$he===void 0?1:_useResizeObserver$he;// Show a loading message if the data is not available\nvar loading=/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});if(!data){return loading;};// Use the x or y axis for percentage\nvar xAxis={tickfont:{size:16}};var yAxis={tickfont:{size:16}};var margin={l:70,r:0,b:20,t:0};if(useX){xAxis.tickformat='%';}else{yAxis.tickformat='%';xAxis.tickangle=-45;margin.b=110;margin.l=30;};// Return the chart\nreturn/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'100%'},ref:ref,children:/*#__PURE__*/_jsx(Plot,{data:data,config:{displayModeBar:false},layout:{width:width,height:height,margin:margin,paper_bgcolor:'rgba(0, 0, 0, 0)',plot_bgcolor:'rgba(0, 0, 0, 0)',barmode:'stack',font:{family:'Raleway, sans-serif'},xaxis:xAxis,yaxis:yAxis,legend:{font:{size:16}}}})});};export default StackedBar;","map":{"version":3,"sources":["/Users/joewlos/Documents/joe_web_react/src/components/StackedBar.js"],"names":["React","Plot","useResizeObserver","StackedBar","props","data","useX","x","ref","width","height","loading","xAxis","tickfont","size","yAxis","margin","l","r","b","t","tickformat","tickangle","displayModeBar","paper_bgcolor","plot_bgcolor","barmode","font","family","xaxis","yaxis","legend"],"mappings":"2CAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CAEA;AACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA;AACA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACvB,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAnB,CACA,GAAMC,CAAAA,IAAI,CAAGF,KAAK,CAACG,CAAnB,CAEA;AAJuB,uBAKgBL,iBAAiB,EALjC,CAKfM,GALe,oBAKfA,GALe,0CAKVC,KALU,CAKVA,KALU,gCAKF,CALE,gEAKCC,MALD,CAKCA,MALD,gCAKU,CALV,uBAOvB;AACA,GAAMC,CAAAA,OAAO,cAAG,iCAAhB,CACA,GAAI,CAACN,IAAL,CAAW,CACP,MAAQM,CAAAA,OAAR,CACH,EAED;AACA,GAAIC,CAAAA,KAAK,CAAG,CAAEC,QAAQ,CAAE,CAAEC,IAAI,CAAE,EAAR,CAAZ,CAAZ,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAEF,QAAQ,CAAE,CAAEC,IAAI,CAAE,EAAR,CAAZ,CAAZ,CACA,GAAIE,CAAAA,MAAM,CAAG,CAAEC,CAAC,CAAE,EAAL,CAASC,CAAC,CAAE,CAAZ,CAAeC,CAAC,CAAE,EAAlB,CAAsBC,CAAC,CAAE,CAAzB,CAAb,CACA,GAAId,IAAJ,CAAU,CACNM,KAAK,CAACS,UAAN,CAAmB,GAAnB,CACH,CAFD,IAEO,CACHN,KAAK,CAACM,UAAN,CAAmB,GAAnB,CACAT,KAAK,CAACU,SAAN,CAAkB,CAAC,EAAnB,CACAN,MAAM,CAACG,CAAP,CAAW,GAAX,CACAH,MAAM,CAACC,CAAP,CAAW,EAAX,CACH,EAED;AACA,mBACI,YAAK,KAAK,CAAG,CAAER,KAAK,CAAE,MAAT,CAAiBC,MAAM,CAAE,MAAzB,CAAb,CAAgD,GAAG,CAAGF,GAAtD,uBACI,KAAC,IAAD,EACI,IAAI,CAAGH,IADX,CAEI,MAAM,CAAG,CAACkB,cAAc,CAAE,KAAjB,CAFb,CAGI,MAAM,CAAG,CACLd,KAAK,CAAEA,KADF,CAELC,MAAM,CAAEA,MAFH,CAGLM,MAAM,CAAEA,MAHH,CAILQ,aAAa,CAAE,kBAJV,CAKLC,YAAY,CAAE,kBALT,CAMLC,OAAO,CAAE,OANJ,CAOLC,IAAI,CAAE,CAAEC,MAAM,CAAE,qBAAV,CAPD,CAQLC,KAAK,CAAEjB,KARF,CASLkB,KAAK,CAAEf,KATF,CAULgB,MAAM,CAAE,CAAEJ,IAAI,CAAE,CAAEb,IAAI,CAAE,EAAR,CAAR,CAVH,CAHb,EADJ,EADJ,CAoBH,EAED,cAAeX,CAAAA,UAAf","sourcesContent":["// React\nimport React from 'react';\n\n// React Plotly\nimport Plot from 'react-plotly.js';\n\n// Resize observer\nimport useResizeObserver from 'use-resize-observer';\n\n// Create a sunburst chart with labels\nfunction StackedBar(props) {\n    const data = props.data;\n    const useX = props.x;\n\n    // Get the resizing info\n    const { ref, width = 1, height = 1 } = useResizeObserver();\n\n    // Show a loading message if the data is not available\n    const loading = <p>Loading...</p>\n    if (!data) {\n        return (loading);\n    };\n\n    // Use the x or y axis for percentage\n    var xAxis = { tickfont: { size: 16 } };\n    var yAxis = { tickfont: { size: 16 } };\n    var margin = { l: 70, r: 0, b: 20, t: 0};\n    if (useX) {\n        xAxis.tickformat = '%';\n    } else {\n        yAxis.tickformat = '%';\n        xAxis.tickangle = -45;\n        margin.b = 110;\n        margin.l = 30;\n    };\n\n    // Return the chart\n    return (\n        <div style={ { width: '100%', height: '100%'} } ref={ ref }>\n            <Plot\n                data={ data }\n                config={ {displayModeBar: false} }\n                layout={ {\n                    width: width, \n                    height: height, \n                    margin: margin,\n                    paper_bgcolor: 'rgba(0, 0, 0, 0)',\n                    plot_bgcolor: 'rgba(0, 0, 0, 0)',\n                    barmode: 'stack',\n                    font: { family: 'Raleway, sans-serif' },\n                    xaxis: xAxis,\n                    yaxis: yAxis,\n                    legend: { font: { size: 16 } }\n                } }\n            />\n        </div>\n    );\n};\n\nexport default StackedBar;"]},"metadata":{},"sourceType":"module"}