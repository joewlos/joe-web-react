{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joewlos/Documents/joe_web_react/src/components/Sunburst.js\",\n    _s = $RefreshSig$();\n\n// React\nimport React from 'react'; // React Plotly\n\nimport Plot from 'react-plotly.js'; // Resize observer\n\nimport useResizeObserver from 'use-resize-observer'; // Create a sunburst chart with labels\n\nfunction Sunburst(props) {\n  _s();\n\n  const data = props.data; // Get the resizing info\n\n  const {\n    ref,\n    width = 1,\n    height = 1\n  } = useResizeObserver(); // Show a loading message if the data is not available\n\n  const loading = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 21\n  }, this);\n\n  if (!data) {\n    return loading;\n  }\n\n  ; // Get the labels, parents, values, and colors from the data\n\n  const labels = data.labels;\n  const parents = data.parents;\n  const values = data.values;\n  const colors = data.colors; // Return the chart\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        type: 'sunburst',\n        labels: labels,\n        parents: parents,\n        values: values,\n        leaf: {\n          opacity: 1\n        },\n        marker: {\n          colors: colors,\n          line: {\n            width: 2,\n            color: '#FAF9F9'\n          }\n        }\n      }],\n      layout: {\n        width: width,\n        height: height,\n        margin: {\n          l: 0,\n          r: 0,\n          b: 0,\n          t: 0\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sunburst, \"T0Sxn33gjE7+BfJmWu67U7vYF/A=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = Sunburst;\n;\nexport default Sunburst;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sunburst\");","map":{"version":3,"sources":["/Users/joewlos/Documents/joe_web_react/src/components/Sunburst.js"],"names":["React","Plot","useResizeObserver","Sunburst","props","data","ref","width","height","loading","labels","parents","values","colors","type","leaf","opacity","marker","line","color","margin","l","r","b","t"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB,CADqB,CAGrB;;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,CAAf;AAAkBC,IAAAA,MAAM,GAAG;AAA3B,MAAiCN,iBAAiB,EAAxD,CAJqB,CAMrB;;AACA,QAAMO,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;;AACA,MAAI,CAACJ,IAAL,EAAW;AACP,WAAQI,OAAR;AACH;;AAAA,GAVoB,CAYrB;;AACA,QAAMC,MAAM,GAAGL,IAAI,CAACK,MAApB;AACA,QAAMC,OAAO,GAAGN,IAAI,CAACM,OAArB;AACA,QAAMC,MAAM,GAAGP,IAAI,CAACO,MAApB;AACA,QAAMC,MAAM,GAAGR,IAAI,CAACQ,MAApB,CAhBqB,CAkBrB;;AACA,sBACI;AAAK,IAAA,KAAK,EAAG;AAAEN,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAb;AAAgD,IAAA,GAAG,EAAGF,GAAtD;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,IAAI,EAAG,CAAC;AACJQ,QAAAA,IAAI,EAAE,UADF;AAEJJ,QAAAA,MAAM,EAAEA,MAFJ;AAGJC,QAAAA,OAAO,EAAEA,OAHL;AAIJC,QAAAA,MAAM,EAAEA,MAJJ;AAKJG,QAAAA,IAAI,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SALF;AAMJC,QAAAA,MAAM,EAAE;AACJJ,UAAAA,MAAM,EAAEA,MADJ;AAEJK,UAAAA,IAAI,EAAE;AACFX,YAAAA,KAAK,EAAE,CADL;AAEFY,YAAAA,KAAK,EAAE;AAFL;AAFF;AANJ,OAAD,CADX;AAeI,MAAA,MAAM,EAAG;AACLZ,QAAAA,KAAK,EAAEA,KADF;AAELC,QAAAA,MAAM,EAAEA,MAFH;AAGLY,QAAAA,MAAM,EAAE;AAAEC,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE,CAAX;AAAcC,UAAAA,CAAC,EAAE,CAAjB;AAAoBC,UAAAA,CAAC,EAAE;AAAvB;AAHH;AAfb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA5CQrB,Q;UAIkCD,iB;;;KAJlCC,Q;AA4CR;AAED,eAAeA,QAAf","sourcesContent":["// React\nimport React from 'react';\n\n// React Plotly\nimport Plot from 'react-plotly.js';\n\n// Resize observer\nimport useResizeObserver from 'use-resize-observer';\n\n// Create a sunburst chart with labels\nfunction Sunburst(props) {\n    const data = props.data;\n\n    // Get the resizing info\n    const { ref, width = 1, height = 1 } = useResizeObserver();\n\n    // Show a loading message if the data is not available\n    const loading = <p>Loading...</p>\n    if (!data) {\n        return (loading);\n    };\n\n    // Get the labels, parents, values, and colors from the data\n    const labels = data.labels;\n    const parents = data.parents;\n    const values = data.values;\n    const colors = data.colors;\n\n    // Return the chart\n    return (\n        <div style={ { width: '100%', height: '100%'} } ref={ ref }>\n            <Plot\n                data={ [{\n                    type: 'sunburst',\n                    labels: labels,\n                    parents: parents,\n                    values: values,\n                    leaf: {opacity: 1},\n                    marker: {\n                        colors: colors,\n                        line: {\n                            width: 2,\n                            color: '#FAF9F9'\n                        }\n                    }\n                }] }\n                layout={ {\n                    width: width, \n                    height: height, \n                    margin: { l: 0, r: 0, b: 0, t: 0}\n                } }\n            />\n        </div>\n    );\n};\n\nexport default Sunburst;"]},"metadata":{},"sourceType":"module"}