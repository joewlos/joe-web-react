{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joewlos/Documents/joe_web_react/src/components/LineChart.js\",\n    _s = $RefreshSig$();\n\n// React\nimport React from 'react'; // React Plotly\n\nimport Plot from 'react-plotly.js'; // Resize observer\n\nimport useResizeObserver from 'use-resize-observer'; // Create a sunburst chart with labels\n\nfunction LineChart(props) {\n  _s();\n\n  const x = props.x;\n  const y = props.y; // Get the resizing info\n\n  const {\n    ref,\n    width = 1,\n    height = 1\n  } = useResizeObserver(); // Show a loading message if the data is not available\n\n  const loading = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n\n  if (!x) {\n    return loading;\n  }\n\n  ; // Return the chart\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        x: x,\n        y: y,\n        type: 'line'\n      }],\n      config: {\n        displayModeBar: false\n      },\n      layout: {\n        width: width,\n        height: height,\n        margin: {\n          l: 70,\n          r: 0,\n          b: 20,\n          t: 0\n        },\n        paper_bgcolor: 'rgba(0, 0, 0, 0)',\n        plot_bgcolor: 'rgba(0, 0, 0, 0)',\n        font: {\n          family: 'Raleway, sans-serif'\n        },\n        legend: {\n          font: {\n            size: 16\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineChart, \"T0Sxn33gjE7+BfJmWu67U7vYF/A=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = LineChart;\n;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/joewlos/Documents/joe_web_react/src/components/LineChart.js"],"names":["React","Plot","useResizeObserver","LineChart","props","x","y","ref","width","height","loading","type","displayModeBar","margin","l","r","b","t","paper_bgcolor","plot_bgcolor","font","family","legend","size"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAMC,CAAC,GAAGD,KAAK,CAACC,CAAhB;AACA,QAAMC,CAAC,GAAGF,KAAK,CAACE,CAAhB,CAFsB,CAItB;;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,CAAf;AAAkBC,IAAAA,MAAM,GAAG;AAA3B,MAAiCP,iBAAiB,EAAxD,CALsB,CAOtB;;AACA,QAAMQ,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;;AACA,MAAI,CAACL,CAAL,EAAQ;AACJ,WAAQK,OAAR;AACH;;AAAA,GAXqB,CAatB;;AACA,sBACI;AAAK,IAAA,KAAK,EAAG;AAAEF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAAb;AAAgD,IAAA,GAAG,EAAGF,GAAtD;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,IAAI,EAAG,CACH;AACIF,QAAAA,CAAC,EAAEA,CADP;AAEIC,QAAAA,CAAC,EAAEA,CAFP;AAGIK,QAAAA,IAAI,EAAE;AAHV,OADG,CADX;AAQI,MAAA,MAAM,EAAG;AAACC,QAAAA,cAAc,EAAE;AAAjB,OARb;AASI,MAAA,MAAM,EAAG;AACLJ,QAAAA,KAAK,EAAEA,KADF;AAELC,QAAAA,MAAM,EAAEA,MAFH;AAGLI,QAAAA,MAAM,EAAE;AAAEC,UAAAA,CAAC,EAAE,EAAL;AAASC,UAAAA,CAAC,EAAE,CAAZ;AAAeC,UAAAA,CAAC,EAAE,EAAlB;AAAsBC,UAAAA,CAAC,EAAE;AAAzB,SAHH;AAILC,QAAAA,aAAa,EAAE,kBAJV;AAKLC,QAAAA,YAAY,EAAE,kBALT;AAMLC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAND;AAOLC,QAAAA,MAAM,EAAE;AAAEF,UAAAA,IAAI,EAAE;AAAEG,YAAAA,IAAI,EAAE;AAAR;AAAR;AAPH;AATb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GArCQpB,S;UAKkCD,iB;;;KALlCC,S;AAqCR;AAED,eAAeA,SAAf","sourcesContent":["// React\nimport React from 'react';\n\n// React Plotly\nimport Plot from 'react-plotly.js';\n\n// Resize observer\nimport useResizeObserver from 'use-resize-observer';\n\n// Create a sunburst chart with labels\nfunction LineChart(props) {\n    const x = props.x;\n    const y = props.y;\n\n    // Get the resizing info\n    const { ref, width = 1, height = 1 } = useResizeObserver();\n\n    // Show a loading message if the data is not available\n    const loading = <p>Loading...</p>\n    if (!x) {\n        return (loading);\n    };\n\n    // Return the chart\n    return (\n        <div style={ { width: '100%', height: '100%'} } ref={ ref }>\n            <Plot\n                data={ [\n                    {\n                        x: x,\n                        y: y,\n                        type: 'line'\n                    }\n                ] }\n                config={ {displayModeBar: false} }\n                layout={ {\n                    width: width, \n                    height: height, \n                    margin: { l: 70, r: 0, b: 20, t: 0},\n                    paper_bgcolor: 'rgba(0, 0, 0, 0)',\n                    plot_bgcolor: 'rgba(0, 0, 0, 0)',\n                    font: { family: 'Raleway, sans-serif' },\n                    legend: { font: { size: 16 } }\n                } }\n            />\n        </div>\n    );\n};\n\nexport default LineChart;"]},"metadata":{},"sourceType":"module"}